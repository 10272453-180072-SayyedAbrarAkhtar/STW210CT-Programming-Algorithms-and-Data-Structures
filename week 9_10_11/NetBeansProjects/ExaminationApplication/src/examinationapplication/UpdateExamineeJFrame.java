/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package examinationapplication;

import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Sayyed Abrar Akhtar
 */
public class UpdateExamineeJFrame extends javax.swing.JFrame {

    /**
     * Creates new form UpdateExamineeJFrame
     */
    int operation =0;
    int row=0;
    int examineeId;
    MySQLConnect MySqlConn;
    public UpdateExamineeJFrame() {
        initComponents();
        setLocationRelativeTo(null);  // *** center appearance of the app ***
        MySqlConn =  new MySQLConnect();
        //loadExamineeData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nameTxtField = new javax.swing.JTextField();
        emailTxtField = new javax.swing.JTextField();
        contactTxtField = new javax.swing.JTextField();
        usernameTxtField = new javax.swing.JTextField();
        pswdPasswordField = new javax.swing.JPasswordField();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnUpdateAdmin = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableExaminee = new javax.swing.JTable();
        cnfmpswdPasswordField = new javax.swing.JPasswordField();
        genderTxtField = new javax.swing.JTextField();
        jButtonDelExaminee = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));
        jPanel1.setAutoscrolls(true);
        jPanel1.setPreferredSize(new java.awt.Dimension(1141, 517));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Update Examinee");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(753, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(386, 386, 386))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        nameTxtField.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        nameTxtField.setName("nameTxtField"); // NOI18N

        emailTxtField.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        emailTxtField.setName("emailTxtField"); // NOI18N

        contactTxtField.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        contactTxtField.setName("contactTxtField"); // NOI18N

        usernameTxtField.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        usernameTxtField.setName("usernameTxtField"); // NOI18N

        pswdPasswordField.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        pswdPasswordField.setName("pswdPasswordField"); // NOI18N

        jLabel9.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel9.setText("Confirm Password:");

        jLabel8.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel8.setText("Password:");

        jLabel7.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel7.setText("Username:");

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel6.setText("Contact:");

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel5.setText("Gender:");

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel4.setText("Email Id:");

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel3.setText("Full Name:");

        btnUpdateAdmin.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        btnUpdateAdmin.setText("Update");
        btnUpdateAdmin.setName("btnUpdateAdmin"); // NOI18N
        btnUpdateAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAdminActionPerformed(evt);
            }
        });

        tableExaminee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Username", "Gender", "Contact", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableExaminee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableExamineeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableExaminee);

        cnfmpswdPasswordField.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        cnfmpswdPasswordField.setName("cnfmpswdPasswordField"); // NOI18N

        genderTxtField.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        genderTxtField.setName("usernameTxtField"); // NOI18N

        jButtonDelExaminee.setText("Delete");
        jButtonDelExaminee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelExamineeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(jLabel5))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(contactTxtField, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                            .addComponent(nameTxtField)
                            .addComponent(pswdPasswordField)
                            .addComponent(genderTxtField))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(jLabel4))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUpdateAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(emailTxtField)
                            .addComponent(usernameTxtField)
                            .addComponent(cnfmpswdPasswordField))))
                .addGap(29, 29, 29))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonDelExaminee)
                .addGap(576, 576, 576))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(emailTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(contactTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(usernameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(pswdPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(cnfmpswdPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(genderTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnUpdateAdmin))
                .addGap(30, 30, 30)
                .addComponent(jButtonDelExaminee)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  
  
     void loadData(String uname, String pass) {
        
        String query = "select * from examinee where username = '" + uname + "' and password = '" + pass + "'";
        ResultSet resultset;
        
        DefaultTableModel model = (DefaultTableModel) tableExaminee.getModel();
        try {
           resultset = MySqlConn.retrieveData(query);
           if (resultset.next()) {
            examineeId = resultset.getInt("id");
            String name = resultset.getString("name");
            String examineename = resultset.getString("username");
            String email = resultset.getString("email");
            String contact = resultset.getString("contact");
            String gender = resultset.getString("gender");
            nameTxtField.setText(name);
            emailTxtField.setText(email);
            contactTxtField.setText(contact);
            usernameTxtField.setText(examineename);
            genderTxtField.setText(gender);
            pswdPasswordField.setText("");
            cnfmpswdPasswordField.setText("");
            
            model.addRow(new Object[]{examineeId, name, examineename,gender,contact, email});
            
            //model.addRow(new Object[]{resultset.getInt("id"),resultset.getString("name"), resultset.getString("username"),resultset.getString("gender"),resultset.getString("contact"), resultset.getString("email")});
               
           
           }   
        } catch (SQLException e) {
           JOptionPane.showMessageDialog(null, "Examinee details not retrieved: " + e);
        }
    }
    // load examinee inforamtion data to table

    /**
     *
     */
    public void loadExamineeData() {
        String query = "select id, name, username, gender, contact, email from examinee  ORDER BY `examinee`.`id` DESC";
        ResultSet resultset;
        try {
           resultset = MySqlConn.retrieveData(query);
           DefaultTableModel model = (DefaultTableModel) tableExaminee.getModel();
           while(resultset.next())
           {
            model.addRow(new Object[]{resultset.getInt("id"),resultset.getString("name"), resultset.getString("username"),resultset.getString("gender"),resultset.getString("contact"), resultset.getString("email")});
               
           }

           
       } catch (SQLException ex) {
       }
    }

    
    // clear all fields input
    private void clearControls(){
        nameTxtField.setText("");
        emailTxtField.setText("");
        contactTxtField.setText("");
        usernameTxtField.setText("");
        pswdPasswordField.setText("");
        cnfmpswdPasswordField.setText("");
        genderTxtField.setText("");
    }
    
    
    //perform database operation
    /*public void executeSQLQuery(String query, String message) {
         Connection conn = MySqlConn.getConn();
         Statement statement;
         try {
             statement = conn.createStatement();
             if((statement.executeUpdate(query))==1) {
                 JOptionPane.showMessageDialog(null, "Data" + message + "Successfull!!");
            }
         }catch (Exception e) {
             JOptionPane.showMessageDialog(null, e);
         }
     }*/
    
    
    private void btnUpdateAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAdminActionPerformed
        String name = nameTxtField.getText();
        String email = emailTxtField.getText();
        String contact = contactTxtField.getText();
        String username = usernameTxtField.getText();
        String password = pswdPasswordField.getText();
        String confirmPassword = cnfmpswdPasswordField.getText();
        String findgender =genderTxtField.getText();
        String gender;
        
        if (findgender.equals("Male") || findgender .equals("male")){
            gender = "Male";
        } else if (findgender.equals("Female") || findgender.equals("female")) {
            gender = "Female";
        } else if (findgender.equals("Other") || findgender.equals("other")) {
            gender = "Other";
        } else {
            JOptionPane.showMessageDialog(null, "Gender can be 'Male' or 'Female' or 'Other' ");
            gender = "";
        }
        /*    
        if (jRadioButtonMale.isShowing()) {
            gender = "Male";
        } else if (jRadioButtonFemale.isShowing()) {
            gender = "Female";
        } else {
            gender = "Other";
        }*/
        // User has input all fields validation
        if(name.trim().equals("") ||
            email.trim().equals("")||
            contact.trim().equals("")||
            username.trim().equals("")||
            password.trim().equals("")||
            confirmPassword.trim().equals("")
        )
        {
            JOptionPane.showMessageDialog(null, "All fields must be filled and password must be entered!!");
        } else if(!password.equals(confirmPassword)) {
            JOptionPane.showMessageDialog(null, "Password did not matched!!");
            pswdPasswordField.setText("");
            cnfmpswdPasswordField.setText("");
            pswdPasswordField.grabFocus();
        } else {
            JOptionPane.showMessageDialog(null, gender);
            String updateAdmin = "update examinee set name = '" + name + "', email = '" + email + "', password = '" + password + "', gender = '" + gender + "', contact = '" + contact + "' where id =" +examineeId;
            MySqlConn.executeSQLQuery(updateAdmin, "Updated");
            clearControls();
            HomeWindowJFrame home = new HomeWindowJFrame(username, password);
            home.show();
            dispose();
        }
    }//GEN-LAST:event_btnUpdateAdminActionPerformed

    private void tableExamineeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableExamineeMouseClicked
        operation=1;
        // code to set selected value on form
        int column = tableExaminee.getColumnCount();
        row = tableExaminee.getSelectedRow();
        
        if(row>=0)
        {
          //Delete.setEnabled(true);   
        }
        examineeId = (int) tableExaminee.getModel().getValueAt(row,0);
        String value = tableExaminee.getModel().getValueAt(row,1).toString();
         nameTxtField.setText(value);
        value = tableExaminee.getModel().getValueAt(row,2).toString();
        usernameTxtField.setText(value);
        value = tableExaminee.getModel().getValueAt(row,3).toString();
        genderTxtField.setText(value);
        value = tableExaminee.getModel().getValueAt(row,4).toString();
        contactTxtField.setText(value);
        value = tableExaminee.getModel().getValueAt(row,5).toString();
        emailTxtField .setText(value);
        
    }//GEN-LAST:event_tableExamineeMouseClicked

   
    
    
    private void jButtonDelExamineeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelExamineeActionPerformed
        //Connection con = MySqlConn.getConn();
            try {
                String deleteQ = "DELETE FROM `examinee` WHERE `examinee`.`id` ="  + examineeId;
                MySqlConn.executeSQLQuery(deleteQ, "Deleted");
                clearControls();
                NewQuestionJFrame frame = new NewQuestionJFrame();
                frame.show();
                dispose();
            } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Question not deleted: " + ex);
            }
    }//GEN-LAST:event_jButtonDelExamineeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateExamineeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateExamineeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateExamineeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateExamineeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateExamineeJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdateAdmin;
    private javax.swing.JPasswordField cnfmpswdPasswordField;
    private javax.swing.JTextField contactTxtField;
    private javax.swing.JTextField emailTxtField;
    private javax.swing.JTextField genderTxtField;
    private javax.swing.JButton jButtonDelExaminee;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTxtField;
    private javax.swing.JPasswordField pswdPasswordField;
    private javax.swing.JTable tableExaminee;
    private javax.swing.JTextField usernameTxtField;
    // End of variables declaration//GEN-END:variables

    

  
}
